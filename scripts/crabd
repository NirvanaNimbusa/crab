#!/usr/bin/env python

import os
import socket
import sqlite3

import cherrypy
from cherrypy.lib.reprconf import Config

from crab.service.monitor import CrabMonitor
from crab.service.notify import CrabNotifyService
from crab.web.rss import CrabRSS
from crab.server import CrabServer
from crab.store.db import CrabDB
from crab.web.web import CrabWeb

def main():
    config = Config()
    config.update({'global': {'server.socket_port': 8000,
                              'server.socket_host': '0.0.0.0'},

                   'crab': {'home': '/usr/share/crab'},

                   'email': {'server': 'mailhost',
                             'from': 'Crab Daemon',
                             'subject_ok': 'Crab notification',
                             'subject_warning': 'Crab notification (WARNING)',
                             'subject_error': 'Crab notification (ERROR)'},

                   'notify': {'timezone': 'UTC',
                              'daily': '0 0 * * *'},

                   'store': {'type': 'sqlite',
                             'file': '/var/lib/crab/crab.db'}})

    env = os.environ

    if 'CRABSYSCONFIG' in env:
        sysconfdir = env['CRABSYSCONFIG']
    else:
        sysconfdir = '/etc/crab'

    try:
        config.update(os.path.join(sysconfdir, 'crabd.ini'))
    except IOError:
        pass

    try:
        config.update(os.path.expanduser('~/.crab/crabd.ini'))
    except IOError:
        pass

    if 'CRABHOME' in env:
        config['crab']['home'] = env['CRABHOME']

    config['/res'] = {'tools.staticdir.on': True,
                      'tools.staticdir.dir': config['crab']['home'] + '/res'}

    if config['store']['type'] == 'sqlite':
        file = config['store']['file']

        if not os.path.exists(file):
            raise Exception('SQLite file does not exist')

        dbconn = sqlite3.connect(file, check_same_thread=False)
        c = dbconn.cursor()
        c.execute("PRAGMA foreign_keys = ON");
        c.close()

        store = CrabDB(dbconn)

    else:
        raise Exception('Unknown store type')

    base_url = ('http://' + socket.getfqdn() + ':' +
               str(config['global']['server.socket_port']))

    monitor = CrabMonitor(store)
    monitor.daemon = True
    monitor.start()

    notify = CrabNotifyService(config, store, base_url)
    notify.daemon = True
    notify.start()

    cherrypy.config.update(config)
    cherrypy.tree.mount(CrabWeb(config, store, monitor, {
                            'Monitor' : monitor,
                            'Notification' : notify
                        }), '/', config)
    cherrypy.tree.mount(CrabServer(store), '/api/0', {})
    cherrypy.tree.mount(CrabRSS(store, base_url), '/rss', {})

    cherrypy.engine.start()
    cherrypy.engine.block()

if __name__ == "__main__":
    main()
