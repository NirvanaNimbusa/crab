#!/usr/bin/env python2

import os
import sqlite3

import cherrypy
from cherrypy.lib.reprconf import Config

from crab.db import CrabDB
from crab.monitor import CrabMonitor
from crab.rss import CrabRSS
from crab.server import CrabServer
from crab.web import CrabWeb

def main():
    config = Config()
    config.update({'global': {'server.socket_port': 8000,
                              'server.socket_host': '0.0.0.0'},

                   'crab': {'home': '/usr/share/crab'},

                   'store': {'type': 'sqlite',
                             'file': '/var/lib/crab/crab.db'}})

    try:
        config.update('/etc/crab/crabd.ini')
    except IOError:
        pass

    try:
        config.update(os.path.expanduser('~/.crab/crabd.ini'))
    except IOError:
        pass

    env = os.environ
    if env.has_key('CRABHOME'):
        config['crab']['home'] = env['CRABHOME']

    config['/res'] = {'tools.staticdir.on': True,
                      'tools.staticdir.dir': config['crab']['home'] + '/res'}

    if config['store']['type'] == 'sqlite':
        file = config['store']['file']

        if not os.path.exists(file):
            raise Exception('SQLite file does not exist')

        dbconn = sqlite3.connect(file, check_same_thread=False)
        c = dbconn.cursor()
        c.execute("PRAGMA foreign_keys = ON");
        c.close()

        store = CrabDB(dbconn)

    else:
        raise Exception('Unknown store type')


    monitor = CrabMonitor(store)
    monitor.daemon = True
    monitor.start()

    cherrypy.config.update(config)
    cherrypy.tree.mount(CrabWeb(config, store, monitor), '/', config)
    cherrypy.tree.mount(CrabServer(store), '/api/0', {})
    cherrypy.tree.mount(CrabRSS(store), '/rss', {})

    # From the CherryPy documentation:
    if hasattr(cherrypy.engine, 'block'):
        # 3.1 syntax
        cherrypy.engine.start()
        cherrypy.engine.block()
    else:
        # 3.0 syntax
        cherrypy.server.quickstart()
        cherrypy.engine.start()

if __name__ == "__main__":
    main()
